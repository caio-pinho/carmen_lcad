void
go()
{
	GlobalState::following_path = true;

	//volatile bool continua = true;
	int numcmds = 0;
	//while(continua) {
	while (numcmds < 1500) {//era <300
		double timestamp = carmen_get_time();
		string tmstmp = to_string(timestamp);
		string dectmstmp = tmstmp.substr(10,5);
		if (strcmp(dectmstmp.c_str(),".0000") == 0 || strcmp(dectmstmp.c_str(),".0500") == 0 || strcmp(dectmstmp.c_str(),".1000") == 0 || strcmp(dectmstmp.c_str(),".1500") == 0 || strcmp(dectmstmp.c_str(),".2000") == 0 || strcmp(dectmstmp.c_str(),".2500") == 0 || strcmp(dectmstmp.c_str(),".3000") == 0 || strcmp(dectmstmp.c_str(),".3500") == 0 || strcmp(dectmstmp.c_str(),".4000") == 0 || strcmp(dectmstmp.c_str(),".4500") == 0 || strcmp(dectmstmp.c_str(),".5000") == 0 || strcmp(dectmstmp.c_str(),".5500") == 0 || strcmp(dectmstmp.c_str(),".6000") == 0 || strcmp(dectmstmp.c_str(),".6500") == 0 || strcmp(dectmstmp.c_str(),".7000") == 0 || strcmp(dectmstmp.c_str(),".7500") == 0 || strcmp(dectmstmp.c_str(),".8000") == 0 || strcmp(dectmstmp.c_str(),".8500") == 0 || strcmp(dectmstmp.c_str(),".9000") == 0 || strcmp(dectmstmp.c_str(),".9500") == 0)  {
			publish_model_predictive_planner_single_motion_command(0.0, 0.0, carmen_get_time());
			printf("timestamp multiplo: %s \n",tmstmp.c_str());
			numcmds += 1;
			//continua = false;
		}
	}

	//for (int z = 0; z < 2000; z++) {
	//publish_model_predictive_planner_single_motion_command(3.0, 0.0, carmen_get_time());
	//}
	/*publish_model_predictive_planner_single_motion_command(0.031, 0.0, carmen_get_time());
	publish_model_predictive_planner_single_motion_command(0.047, 0.0, carmen_get_time());
	publish_model_predictive_planner_single_motion_command(0.063, 0.0, carmen_get_time());
	publish_model_predictive_planner_single_motion_command(0.079, 0.0, carmen_get_time());
	publish_model_predictive_planner_single_motion_command(0.095, 0.0, carmen_get_time());
	publish_model_predictive_planner_single_motion_command(0.111, 0.0, carmen_get_time());
	publish_model_predictive_planner_single_motion_command(0.127, 0.0, carmen_get_time());
	publish_model_predictive_planner_single_motion_command(0.143, 0.0, carmen_get_time());
	publish_model_predictive_planner_single_motion_command(0.159, 0.0, carmen_get_time());
	publish_model_predictive_planner_single_motion_command(0.175, 0.0, carmen_get_time());*/
	//GlobalState::following_path = false;
	
}
